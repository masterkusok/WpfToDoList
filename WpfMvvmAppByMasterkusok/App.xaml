<Application x:Class="WpfMvvmAppByMasterkusok.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:WpfMvvmAppByMasterkusok"
             StartupUri="Views/MainWindow.xaml">
    <Application.Resources>

        <!-- All window style -->
        <Style TargetType="Window" x:Key="WindowStyle">
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#2e2e2e"/>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Style of all big labels -->
        <Style TargetType="Label" x:Key="LargeLabelStyle">
            <Setter Property="FontSize" Value="50"/>
            <Setter Property="Foreground" Value="#5065d9"/>
        </Style>
        <!-- Style for small labels -->
        <Style TargetType="Label" x:Key="SmallLabelStyle">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <!-- Beautiful login Text boxes-->
        <Style TargetType="TextBox" x:Key="LoginTextBox">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="TextAlignment" Value="Left"/>
            <Setter Property="Background" Value="#1a1a1a"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <!-- Beautiful login password boxes-->
        <Style TargetType="PasswordBox" x:Key="LoginPasswordBox">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="#1a1a1a"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <!--Button without bg and hover effects-->
        <Style TargetType="Button" x:Key="ButtonWithoutHoverAndBg">
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush>Transparent</SolidColorBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" BorderThickness="0" BorderBrush="Black" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="1" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Cursor">
                        <Setter.Value>
                            <Cursor >
                                Hand
                            </Cursor>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="ToDoItemActionButton">
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush>#5065d9</SolidColorBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" BorderThickness="0" BorderBrush="#5065d9"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="1" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="#4052b3"/>
                    <Setter Property="Cursor">
                        <Setter.Value>
                            <Cursor >
                                Hand
                            </Cursor>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="FadingAndTransparentPopup" TargetType="Popup">
            <Setter Property="AllowsTransparency" Value="True"/>
            <Setter Property="PopupAnimation" Value="Fade"/>
        </Style>

        <Style x:Key="LoginOrRegisterPopup" TargetType="Popup">
            <Setter Property="AllowsTransparency" Value="True"/>
            <Setter Property="Width" Value="350"/>
            <Setter Property="Height" Value="180"/>
            <Setter Property="PopupAnimation" Value="Fade"/>
        </Style>

        <!-- Spinning loader animation -->
        <Style x:Key="SpinningImage" TargetType="Image">
            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
            <Setter Property="Image.RenderTransform">
                <Setter.Value>
                    <RotateTransform Angle="0"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:1"
                                Storyboard.TargetProperty="RenderTransform.Angle"
                                From="0" To="360" RepeatBehavior="Forever"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TextBlock" x:Key="TextBlockStyle">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="20"/>
        </Style>
    </Application.Resources>
</Application>
